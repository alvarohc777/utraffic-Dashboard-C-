// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Solicitudes.Data;

#nullable disable

namespace Solicitudes.Migrations
{
    [DbContext(typeof(ClienteContext))]
    partial class ClienteContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Solicitudes.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Calificacion")
                        .HasColumnType("integer");

                    b.Property<string>("Documento")
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Solicitudes.Models.Pago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .HasColumnType("text");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("SolicitudId")
                        .HasColumnType("integer");

                    b.Property<float>("Valor")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("SolicitudId");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("Solicitudes.Models.Solicitud", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClienteId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaSolicitud")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Monto")
                        .HasColumnType("integer");

                    b.Property<int>("Plazo")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Solicitudes");
                });

            modelBuilder.Entity("Solicitudes.Models.Pago", b =>
                {
                    b.HasOne("Solicitudes.Models.Solicitud", "Solicitud")
                        .WithMany("PlanPago")
                        .HasForeignKey("SolicitudId");

                    b.Navigation("Solicitud");
                });

            modelBuilder.Entity("Solicitudes.Models.Solicitud", b =>
                {
                    b.HasOne("Solicitudes.Models.Cliente", "Cliente")
                        .WithMany("Solicitudes")
                        .HasForeignKey("ClienteId");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Solicitudes.Models.Cliente", b =>
                {
                    b.Navigation("Solicitudes");
                });

            modelBuilder.Entity("Solicitudes.Models.Solicitud", b =>
                {
                    b.Navigation("PlanPago");
                });
#pragma warning restore 612, 618
        }
    }
}
